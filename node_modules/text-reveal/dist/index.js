import{jsx as e,jsxs as t}from'react/jsx-runtime';import{useRef as r,useMemo as l,useState as n,useEffect as i,useCallback as o}from'react';const a=({text:n,textColor:i='#3d3d3d',fillColor:o='#f47979',fillSpeed:a=100,fillDelay:c=30,fillDirection:s='left-right',fillType:p='scroll',fillDuration:u=2e3,freeScroll:f=!1})=>{const g=r(null),m=l((()=>d(i)),[i]),y=l((()=>d(o)),[o]),{generateClipPathFunction:v}=h({fillType:p,ref:g,fillDelay:c,fillDirection:s,fillSpeed:a,fillDuration:u,textLength:n.length,freeScroll:f});return e('div',{ref:g,children:n.map(((r,l)=>t('div',{style:{position:'relative',width:'fit-content',whiteSpace:'nowrap'},children:[e('div',{style:m,children:r}),e('div',{style:{clipPath:v(l),position:'absolute',color:o,top:0,left:0,...y},children:r})]},r+'-'+l)))})},c=e=>{const t=e instanceof HTMLElement&&window.getComputedStyle(e).overflowY;return e?'visible'!==t&&'hidden'!==t&&e.scrollHeight>=e.clientHeight?e:c(e.parentElement)||window:null},s=e=>{const[t,r]=n(0),[a,s]=n(null),{parentHeight:p,elementTop:u}=l((()=>((e,t)=>e instanceof Window?{parentHeight:e?.innerHeight||0,elementTop:t.current?.offsetTop||0}:{parentHeight:e?.clientHeight||0,elementTop:(t?.current?.offsetTop||0)-(e?.offsetTop||0)})(a,e)),[a]);i((()=>{s(c(e.current))}),[e?.current]);const f=o((()=>{r((()=>a instanceof Window?a.scrollY:a?.scrollTop||0))}),[a,e?.current]);return i((()=>(a?.addEventListener('scroll',f,{passive:!0}),()=>{a?.removeEventListener('scroll',f)})),[e?.current,a]),{scrollY:t,parentElement:a,parentHeight:p,elementTop:u}};let p;const u=({initialValue:e=0,targetValue:t=100,duration:r=2e3})=>{const[l,a]=n(e),[c,s]=n(null),u=o((()=>{clearInterval(p),s(!0),a(e)}),[]),f=o((()=>{s(!1),a(e),clearInterval(p)}),[]);return i((()=>(c&&(()=>{let l=e;const n=Math.floor(r/(t-e));p=setInterval((()=>{l+=1,a(l),l>=t&&clearInterval(p)}),n)})(),()=>{clearInterval(p)})),[c]),{count:l,startCounter:u,stopCounter:f}},f=({fillDirection:e,clipProgress:t})=>{switch(e){case'left-right':default:return`polygon(0% 0%, ${t}% 0%, ${t}% 100%, 0% 100%)`;case'top-bottom':return`polygon(100% 0%, 0%  0%, 0%  ${t}%, 100% ${t}%)`;case'slant-top-bottom':return`polygon(${2*t}% 0%, 0%  0%, 0%  100%, ${t}% 100%)`;case'slant-bottom-top':return`polygon(${t}% 0%, 0%  0%, 0%  100%, ${2*t}% 100%)`}},g='polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)',h=({fillType:e,ref:t,fillDelay:r,fillDirection:n,fillSpeed:o,fillDuration:a,textLength:c,freeScroll:p})=>{const{scrollY:h,parentElement:d,parentHeight:m,elementTop:y}=s(t),{startHeight:v,breakPoint:H}=l((()=>(({ref:e,elementTop:t,parentHeight:r,fillDelay:l,textLength:n,freeScroll:i})=>{let o=0,a=0,c=0;return e&&e.current&&(o=t-r+r*(l/100),a=r+o-r*(l/100),c=i?e?.current?.clientHeight/n:(a-o)/n),{startHeight:o,stopHeight:a,breakPoint:c}})({ref:t,elementTop:y,parentHeight:m,fillDelay:r,textLength:c,freeScroll:p})),[t,d,m]),{count:T,startCounter:D,stopCounter:C}=u({initialValue:0,targetValue:100,duration:a>999?Math.abs(a-1e3):a});switch(i((()=>{'timer'===e&&(h>v?!T&&D():C())}),[h>v]),e){case'scroll':return{generateClipPathFunction:e=>{if(h>=v){const t=(h-v-H*e)/H*o;if(t>=100)return;return t?f({fillDirection:n,clipProgress:t}):g}return g}};case'timer':return{generateClipPathFunction:e=>{if(h>v){const t=(T-100/c*e)/(100/c)*o;if(t>=100)return;return t?f({fillDirection:n,clipProgress:t}):g}return g}};default:return{generateClipPathFunction:()=>g}}},d=e=>e.includes('linear-gradient')?{background:e,backgroundClip:'text',WebkitTextFillColor:'transparent'}:{color:e};export{a as default,h as generateClipPath,d as getColor,u as useCounter,s as useScroll};
